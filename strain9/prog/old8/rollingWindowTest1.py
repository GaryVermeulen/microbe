# rollingWindowTest1.py
#

def rolling_window(lst, window_size):
    for i in range(len(lst) - window_size + 1):
        yield lst[i: i + window_size]

def isNumPrime(num):

    retValue = False

    if num > 1:
        for i in range(2, (num//2)+1):
            if (num % i) == 0:
                break
        else:
            retValue = True
    
    return retValue

if __name__ == "__main__":
    
    #lst = [1, 2, 3, 4, 5, 6]

    pLst = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,
                 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163,
                 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257,
                 263, 269, 271, 277, 281, 283, 293,
                 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397,
                 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499,
                 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599,
                 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691,
                 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797,
                 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887,
                 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997,
                 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063]

    mixedLst = [1, 2, 3, 4, 5, 6, 7, 8, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,
                 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 164, 165,
                 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 258,
                 259, 260, 261, 262, 263, 269, 271, 277, 281, 283, 293, 294, 295, 296, 297, 298, 299, 300,
                 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 398, 399,
                 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 500,
                 501, 502, 503, 504, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 600,
                 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 692, 693,
                 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 798, 799, 800, 801,
                 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 888, 889, 890,
                 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019,
                 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070]
    
    workingLst = []
    alive = True


    """
    window_size = 3

    for window in rolling_window(lst, window_size):
        print(window) 
    """
    """
    window_size = 5

    for window in rolling_window(mixedLst, window_size):
        print("window: ", window)

        for n in window:
            if not isNumPrime(n):
                print("NP", n)
                break
                
        print("-----")
    """         

    # Rolling window not the answer...
    #...Let's look at slicing...
    #
    idx = 0
    window_size = 5
    windowLst = []
    
    while alive:
        currentNumber = mixedLst[idx]

        workingLst.append(currentNumber)

        if len(workingLst) < window_size:
            print("workingLst: ", workingLst)
            for n in workingLst:
                if not isNumPrime(n):
                    print("NP", n)
                    break

            print("-----")
        else:
            windowLst = workingLst[-5:]
            print("windowLst: ", windowLst)
            for n in windowLst:
                if not isNumPrime(n):
                    print("NP", n)
                    break

            print(".....")

        idx += 1

        if (idx) >= len(mixedLst):
            alive = False
